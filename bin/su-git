#!/bin/bash
#
# @author  yannoff <https://github.com/yannoff>
# @project su-git
# @license MIT
#
set -f

# Initialize core variables required to build the docker command
host=`hostname`
user=`whoami`
group=`id -gn`
uid=`id -u`
gid=`id -g`
gitbin=git
dockerimg=yannoff/sshbox
known_hosts=$HOME/.ssh/known_hosts

err_message() {
    printf "$@"
    exit 1
}

usage() {
    cat <<-EOT
Usage:
       su-git [OPTIONS] <command>

Options:
      --identity <file>         Path to the private key file. 
                                Alternatively, you can set this up permanently using git-config: git config ssh.identity <file>
      --known-hosts <file>      Alternative path to the RSA known hosts file (default path used: ~/.ssh/known_hosts)

Commands:
       Whatever command recognized by git. See the git(1) help section
EOT
}

# Iterate over su-git command line invocation
# Detect and extract identity file, trusted host, known hosts file (if option passed),
# remove it from args, then rebuild the whole command-line without
args=( "$gitbin" )
while [ $# -gt 0 ]
do
    case $1 in
        --help|-h)
            usage
            exit 0
            ;;
        --debug)
            debug=1
            shift 1
            ;;
        --identity)
            identity=$2
            shift 2
            ;;
        --known-host)
            known_host=$2
            shift 2
            ;;
        *)
            args+=("$1")
            shift
            ;;
    esac
done

# Recursively traverse to find git top-level directory
# and build relative CWD
topdir=$PWD
subdirs=()
while [ ! -d "$topdir/.git" ]
do
    subdirs+=(`basename $topdir`)
    topdir=`dirname $topdir`
done
# Rebuild CWD upon subdirs array
cwd=
for f in "${subdirs[@]}"
do
    cwd=$f/$cwd
done

[ -z "$identity" ] && identity=`git config ssh.identity`
[ -z "$identity" ] && err_message "No identity file configured. Exiting.\n\nPlease configure it issuing: git config ssh.identity /path/to/private_rsa .\n\n"

# Base docker command
# TODO For major readability, use a bash array instead
printf -v docker_command 'docker run --rm --name su_git -h %s -e USER=%s -w /app/src/%s -v %s:/app/src/%s -v %s:/app/ssh/id_rsa' "$host" "$user" "$cwd" "$topdir" "$cwd" "$identity"

[ -f "$known_hosts" ] || err_message "\nCould not stat the known hosts file at default location \"%s\".\nPlease consider either creating it or giving an alternate location using --known-hosts option.\n\n" $known_hosts
docker_command+=" -v $known_hosts:/app/ssh/known_hosts"

# Print debug informations
[ -z "$debug" ] || echo -e "[info] \e[01;32mRunning:\e[00m\n"$docker_command $dockerimg "${args[@]}"

$docker_command $dockerimg "${args[@]}"
